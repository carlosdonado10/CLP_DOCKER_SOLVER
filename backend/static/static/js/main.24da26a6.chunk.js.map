{"version":3,"sources":["components/protectedRoute.js","components/auth.js","components/navbarComponent.js","pages/authentication.js","components/SolutionForm.js","components/scene.js","components/visualizationForm.js","components/colorPicker.js","components/summaryTable.js","pages/Home.js","_services/authService.js","_services/solutionsService.js","components/addForm.js","components/rowTable.js","pages/boxes.js","pages/container.js","App.js","serviceWorker.js","index.js"],"names":["Component","Auth","props","state","username","email","full_name","password","password_confirmation","login_errors","handleLogin","bind","handleChange","handleRegistration","event","this","setState","target","name","value","authService","login","history","then","response","console","log","data","localStorage","setItem","JSON","stringify","handleSuccessfulAuth","preventDefault","catch","err","warn","register","Form","onSubmit","Group","Label","FormControl","type","placeholder","onChange","required","Button","onClick","Control","renderLogin","renderRegister","NavbarComponent","logout","removeItem","id","Navbar","bg","variant","Brand","href","Nav","className","Link","inline","Authentication","push","pushLogin","Col","md","span","offset","loggedInStatus","SolutionForm","user_id","solutions","solutionService","getUserId","getSolutions","handleSolutionChange","i","length","Dropdown","Item","eventKey","key","controlId","DropdownButton","style","maxHeigh","title","Scene","cubes","maxX","refresh","init","start","stop","animate","addBoxes","mount","removeChild","renderer","domElement","OrbitControls","require","THREE","axesHelper","width","clientWidth","height","clientHeight","scene","add","camera","antialias","position","z","controls","setClearColor","setSize","appendChild","box","container","material","color","transparent","opacity","geometry","x","y","cube","set","edges","linewidth","iteration","boxes","filtered","filter","x2","x1","y2","y1","z2","z1","lines","frameId","requestAnimationFrame","cancelAnimationFrame","containerVisible","addContainer","updateProjectionMatrix","update","renderScene","window","render","ref","VisualizationForm","handleVisualizeContainer","checked","Check","label","min","max","maxIterations","tooltip","handleIteration","ColorPicker","handleClose","displayColorPicker","editable","handleColorClick","styles","undefined","reactCSS","borderRadius","background","rgb","r","g","b","a","swatch","padding","boxShadow","display","cursor","popover","zIndex","cover","top","right","bottom","left","handleColorChange","SummaryTable","row","allocated","requested","rows","summary","renderRow","Table","bordered","Home","React","createRef","solution","maxIteration","handleContainerVisible","handleIterarion","getSolutionBoxes","Axios","spread","responses","current","parseInt","visible","AuthService","parse","getItem","headers","qs","requestBody","post","process","SolutionsService","url","urlBoxes","urlContainer","url_user","forEach","hex","config","get","error","solutionId","all","AddForm","numBoxes","addRow","addItem","Object","assign","includes","disabled","step","RowTable","renderRows","picker","striped","hover","size","submit","Boxes","addBox","Container","addedContainer","optimizerService","optimize","App","user","exact","path","component","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.24da26a6.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport Axios from 'axios'\r\nimport {Redirect} from \"react-router\";\r\nimport {Route} from 'react-router-dom';\r\n\r\n\r\nclass ProtectedRoute extends Component {\r\n    constructor(props, context) {\r\n        super(props, context);\r\n\r\n        this.state ={\r\n            isLoading: true,\r\n            isLoggedIn: false\r\n        };\r\n\r\n        let config={};\r\n        let token = JSON.parse(localStorage.getItem('login'));\r\n        if (token === null) {\r\n            this.setState(() => ({isLoading: false, isLoggedIn: false}));\r\n        }else{\r\n            config = {\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + token.access_token\r\n                }\r\n            }\r\n        }\r\n        Axios.get(`${process.env[\"REACT_APP_BASE_URL\"]}/users/me`, config).then(response => {\r\n            this.setState(() => ({isLoading: false, isLoggedIn: true}));\r\n        }).catch(err => {\r\n            this.setState(()=> ({isLoading: false, isLoggedIn: false}));\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.state.isLoading ? null:\r\n                    this.state.isLoggedIn ?\r\n                        <Route {...this.props} component={this.props.component} path={this.props.path} exact={this.props.exact}/> :\r\n                        <Redirect to={{pathname:'/login'}}/>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProtectedRoute;","import React, {Component} from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Button from 'react-bootstrap/Button'\r\n\r\n\r\nclass Auth extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: \"\",\r\n            email: \"\",\r\n            full_name: \"\",\r\n            password: \"\",\r\n            password_confirmation: \"\",\r\n            login_errors: \"\"\r\n        }\r\n        this.handleLogin=this.handleLogin.bind(this);\r\n        this.handleChange=this.handleChange.bind(this);\r\n        this.handleRegistration=this.handleRegistration.bind(this);\r\n    }\r\n    handleChange(event){\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n\r\n    handleLogin(event){\r\n        let promise = this.props.authService.login(this.state.username, this.state.password, this.props.history);\r\n        promise.then(response => {\r\n            console.log(`#auth.js: ${console.log(response.data)}`);\r\n            localStorage.setItem('login', JSON.stringify(response.data));\r\n            this.setState({\r\n                username: \"\", password: \"\"\r\n            });\r\n\r\n            this.props.handleSuccessfulAuth()\r\n            event.preventDefault();\r\n        }).catch(err =>{\r\n            console.log(`#auth.js: ${console.warn(err)}`)\r\n        })\r\n    event.preventDefault();\r\n    }\r\n\r\n    handleRegistration(event){\r\n\r\n        this.props.authService.register(this.state, this.state.username, this.state.password, this.props.history);\r\n        // this.props.authService.login(this.state.username, this.state.password);\r\n        this.setState({\r\n            username: \"\", password: \"\", email: \"\", password_confirmation: \"\", full_name: \"\"\r\n        });\r\n        this.props.handleSuccessfulAuth()\r\n        event.preventDefault();\r\n    }\r\n\r\n    renderLogin(){\r\n        return (\r\n            <div>\r\n                <h1>Log In</h1>\r\n                <Form onSubmit={this.handleLogin}>\r\n                    <Form.Group>\r\n                        <Form.Label>Username</Form.Label>\r\n                        <FormControl type=\"username\" name=\"username\" placeholder=\"Username\" value={this.state.username} onChange={this.handleChange} required/>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <FormControl type=\"password\" name=\"password\" placeholder=\"Enter Password\" value={this.state.password} onChange={this.handleChange} required/>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Button type=\"submit\" onClick={this.handleLogin}>Login!</Button>\r\n                    </Form.Group>\r\n\r\n\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderRegister(){\r\n        return(\r\n            <div>\r\n                <h1>Registration</h1>\r\n                <Form>\r\n                    <Form.Group>\r\n                        <Form.Label>Username</Form.Label>\r\n                        <Form.Control type={\"text\"} name=\"username\" placeholder={\"Enter Username\"} onChange={this.handleChange}/>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control type=\"email\" name=\"email\" placeholder=\"Enter Email\" onChange={this.handleChange}/>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Full Name</Form.Label>\r\n                        <Form.Control type=\"text\" name=\"full_name\" placeholder=\"Enter Full Name\" onChange={this.handleChange}/>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type=\"password\" name=\"password\" placeholder=\"Enter Password\" onChange={this.handleChange}/>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control type=\"password\" name=\"password_confirmation\" placeholder=\"Enter Your Password Again\" onChange={this.handleChange}/>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Button type=\"submit\" onClick={this.handleRegistration}>Log In!</Button>\r\n                    </Form.Group>\r\n                </Form>\r\n\r\n\r\n                {/*<form onSubmit={this.handleRegistration}>*/}\r\n                {/*    <input type={\"text\"} name={\"username\"} className={\"form-control\"} placeholder={\"Username\"} value={this.state.username} onChange={this.handleChange}/>*/}\r\n                {/*    <input type={\"email\"} name={\"email\"} className={\"form-control\"} placeholder={\"Email\"} value={this.state.email} onChange={this.handleChange}/>*/}\r\n                {/*    <input type={\"text\"} name={\"full_name\"} className={\"form-control\"} placeholder={\"Full Name\"} value={this.state.full_name} onChange={this.handleChange}/>*/}\r\n                {/*    <input type={\"password\"} name={\"password\"} className={\"form-control\"} placeholder={\"Password\"} value={this.state.password} onChange={this.handleChange}/>*/}\r\n                {/*    <input type={\"password\"} name={\"password_confirmation\"} className={\"form-control\"} placeholder={\"Password Confirmation\"} value={this.state.password_confirmation} onChange={this.handleChange}/>*/}\r\n                {/*    <button type=\"submit\" className=\"submit-field\">Log in</button>*/}\r\n                {/*</form>*/}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        if(this.props.type==='login') {\r\n            return(this.renderLogin());\r\n        }else if(this.props.type==='register'){\r\n            return(this.renderRegister());\r\n        }\r\n    }\r\n}\r\n\r\nexport default Auth;","import React, {Component} from 'react';\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nclass NavbarComponent extends Component {\r\n    constructor() {\r\n        super();\r\n        this.logout = this.logout.bind(this);\r\n    }\r\n\r\n    logout(){\r\n        localStorage.removeItem('login');\r\n        // this.props.pushLogin();\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div id={\"navbarComponent\"}>\r\n                <Navbar bg=\"dark\" variant=\"dark\">\r\n                    <Navbar.Brand href=\"/\">CLP Solver</Navbar.Brand>\r\n                    <Nav className=\"mr-auto\">\r\n                        <Nav.Link href=\"/\">Home</Nav.Link>\r\n                        <Nav.Link href=\"/boxes\">New Plan</Nav.Link>\r\n                        <Nav.Link href=\"#pricing\">Pricing</Nav.Link>\r\n                    </Nav>\r\n                    <Form inline>\r\n                         <Button variant=\"outline-success\" onClick={this.logout}>LogOut</Button>\r\n                    </Form>\r\n\r\n                </Navbar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavbarComponent;","import React, {Component} from 'react';\r\nimport Auth from \"../components/auth\";\r\nimport NavbarComponent from \"../components/navbarComponent\";\r\nimport Col from 'react-bootstrap/Col'\r\n\r\nclass Authentication extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSuccessfulAuth = this.handleSuccessfulAuth.bind(this);\r\n    }\r\n\r\n    handleSuccessfulAuth(data){\r\n        this.props.handleLogin(data);\r\n        this.props.history.push('/')\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <NavbarComponent pushLogin={this.props.pushLogin}/>\r\n                </div>\r\n                <Col md={{ span: 4, offset: 4}}>\r\n\r\n                    <Auth\r\n                        loggedInStatus = {this.props.loggedInStatus}\r\n                        handleSuccessfulAuth={this.handleSuccessfulAuth}\r\n                        authService={this.props.authService}\r\n                        type={this.props.type}\r\n                        history ={this.props.history}\r\n                    />\r\n                </Col>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Authentication;","import React, {Component} from 'react';\r\nimport Form from 'react-bootstrap/Form'\r\nimport {DropdownButton} from \"react-bootstrap\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\n\r\nimport './SolutionForm.css'\r\n\r\nclass SolutionForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user_id: \"\",\r\n            solutions: []\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        let uid = this.props.solutionService.getUserId();\r\n        uid.then(response =>{\r\n            this.setState({\r\n                user_id: response.data.id\r\n            })\r\n            let solutionsPromise = this.props.solutionService.getSolutions(response.data.id);\r\n            solutionsPromise.then(response => {\r\n                this.setState({\r\n                    solutions: response.data\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    handleChange(event){\r\n        // Name stores the position of the selected solution in this.state.solutions\r\n        this.props.handleSolutionChange(this.state.solutions[event.target.name])\r\n    }\r\n\r\n    render() {\r\n        let solutions = [];\r\n        for(let i=0; i<this.state.solutions.length; i++){\r\n            //TODO: Cambiar al nombre de la solución\r\n            solutions.push(<Dropdown.Item eventKey={i} key={i} name={i} onClick={this.handleChange}>{this.state.solutions[i].id} </Dropdown.Item>)\r\n        }\r\n\r\n\r\n        return (\r\n            <div>\r\n                <Form>\r\n                    <Form.Group controlId=\"solutionPicker\">\r\n                        <DropdownButton\r\n                            style={{maxHeigh: \"50px\"}}\r\n                            title={\"Select a Solution\"}\r\n                            key={1}\r\n                            id=\"solution-dropdown\"\r\n                            variant=\"secondary\"\r\n                        >\r\n                            {solutions}\r\n                        </DropdownButton>\r\n\r\n                    </Form.Group>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SolutionForm;","import React, { Component } from 'react'\r\nimport * as THREE from 'three'\r\n// import OrbitControls from 'three-orbit-controls'\r\n\r\nclass Scene extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            cubes: [],\r\n            maxX: 0,\r\n            offset: 0.1\r\n        }\r\n        this.refresh = this.refresh.bind(this);\r\n        this.init = this.init.bind(this);\r\n        this.start = this.start.bind(this);\r\n        this.stop = this.stop.bind(this);\r\n        this.animate = this.animate.bind(this);\r\n        this.addBoxes = this.addBoxes.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.init();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.stop()\r\n        this.mount.removeChild(this.renderer.domElement)\r\n    }\r\n\r\n\r\n    init(){\r\n        let OrbitControls = require('three-orbit-controls')(THREE);\r\n        let axesHelper = new THREE.AxesHelper();\r\n        const width = this.mount.clientWidth\r\n        const height = this.mount.clientHeight\r\n\r\n        const scene = new THREE.Scene()\r\n        scene.add(axesHelper);\r\n        const camera = new THREE.PerspectiveCamera(\r\n            75,\r\n            width / height,\r\n            1,\r\n            1000000\r\n        )\r\n        const renderer = new THREE.WebGLRenderer({ antialias: true })\r\n\r\n\r\n        camera.position.z = 900;\r\n        const controls = new OrbitControls(camera, this.mount);\r\n\r\n        renderer.setClearColor('#b6b2b2')\r\n        renderer.setSize(width, height)\r\n\r\n        this.scene = scene\r\n        this.camera = camera\r\n        this.renderer = renderer\r\n        this.controls = controls\r\n        this.mount.appendChild(this.renderer.domElement)\r\n        this.start()\r\n    }\r\n\r\n    addContainer(){\r\n\r\n        let box = this.props.container;\r\n        let material = new THREE.MeshBasicMaterial({color: '#6F6F6F'})\r\n        material.transparent = true;\r\n        material.opacity = 0.2;\r\n        const geometry = new THREE.BoxGeometry(box.x, box.y, box.z)\r\n        const cube = new THREE.Mesh(geometry, material)\r\n        cube.position.set(box.x/2, box.y/2, box.z/2)\r\n        this.scene.add(cube)\r\n        this.state.cubes.push({\"id\": box.id, \"cube\": cube})\r\n        let edges = new THREE.EdgesHelper(cube, 0x0000);\r\n        edges.material.linewidth = 5;\r\n        edges.position.set(box.x/2, box.y/2, box.z/2);\r\n        this.scene.add(edges);\r\n\r\n    }\r\n\r\n    addBoxes(iteration){\r\n\r\n        if(this.props.boxes !==null) {\r\n            let filtered = this.props.boxes.filter(box => box.iteration <= iteration);\r\n            for (let i = 0; i < filtered.length; i++) {\r\n                let box = filtered[i];\r\n                let material = new THREE.MeshBasicMaterial({color: box.color})\r\n                material.transparent = true;\r\n                material.opacity = 0.5;\r\n                const geometry = new THREE.BoxGeometry(box.x2-box.x1, box.y2-box.y1, box.z2-box.z1)\r\n                const cube = new THREE.Mesh(geometry, material)\r\n                cube.position.set((box.x2+box.x1)/2, (box.y2+box.y1)/2, (box.z2+box.z1)/2)\r\n                this.scene.add(cube)\r\n                this.state.cubes.push({\"id\": box.id, \"cube\": cube})\r\n                let edges = new THREE.EdgesGeometry(geometry);\r\n                let lines = new THREE.LineSegments(edges, new THREE.LineBasicMaterial({color: '#000000'}))\r\n\r\n                this.scene.add(lines);\r\n                lines.position.set((box.x1+box.x2)/2, (box.y1 + box.y2)/2, (box.z1 + box.z2)/2);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    start() {\r\n        if (!this.frameId) {\r\n            this.frameId = requestAnimationFrame(this.animate)\r\n        }\r\n    }\r\n\r\n    stop() {\r\n        cancelAnimationFrame(this.frameId)\r\n    }\r\n\r\n    refresh(containerVisible, iteration){\r\n        this.mount.removeChild(this.renderer.domElement);\r\n        this.init();\r\n        this.addBoxes(iteration);\r\n        if(containerVisible){\r\n            this.addContainer();\r\n        }\r\n        this.camera.position.x = this.props.container.x\r\n        this.camera.position.y = this.props.container.y\r\n        this.camera.position.z = this.props.container.z\r\n\r\n        this.camera.updateProjectionMatrix()\r\n    }\r\n\r\n    animate() {\r\n        // this.cube.rotation.x += 0.01\r\n        // this.cube.rotation.y += 0.01\r\n        this.controls.update();\r\n        this.renderScene()\r\n        this.frameId = window.requestAnimationFrame(this.animate)\r\n    }\r\n\r\n    renderScene() {\r\n\r\n        this.renderer.render(this.scene, this.camera)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"scenediv\"\r\n                 style={{ width: '100%', height: '100%' }}\r\n                 ref={(mount) => { this.mount = mount }}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default Scene","import React, {Component} from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport RangeSlider from 'react-bootstrap-range-slider';\r\n\r\nclass VisualizationForm extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            iteration: 0\r\n        }\r\n        this.handleVisualizeContainer = this.handleVisualizeContainer.bind(this);\r\n    }\r\n\r\n    handleVisualizeContainer(event){\r\n        this.props.containerVisible(event.target.checked);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <Form>\r\n                    <Form.Group controlId=\"ToggleContainer\">\r\n                        <Form.Check\r\n                            type='switch'\r\n                            id='switch'\r\n                            label='View Container'\r\n                            onChange={this.handleVisualizeContainer}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='ieration-slider'>\r\n                        <Form.Label>Step by step loading</Form.Label><br/>\r\n                        <RangeSlider\r\n                        min={0}\r\n                        max={this.props.maxIterations}\r\n                        tooltip={'on'}\r\n                        onChange={this.props.handleIteration}\r\n                        />\r\n                    </Form.Group>\r\n                </Form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default VisualizationForm;","import React, {Component} from 'react';\r\nimport {CirclePicker} from \"react-color\";\r\nimport reactCSS from 'reactcss';\r\n\r\nclass ColorPicker extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            displayColorPicker: false,\r\n            editable: true\r\n        }\r\n\r\n        this.handleColorClick = this.handleColorClick.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.styles = this.styles.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.editable !== undefined){\r\n            this.setState({\r\n                'editable': false\r\n            })\r\n        }\r\n    }\r\n\r\n    handleColorClick(){\r\n        this.setState({displayColorPicker: !this.state.displayColorPicker})\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({ displayColorPicker: false })\r\n    };\r\n\r\n    styles(){\r\n        return (\r\n            reactCSS({\r\n            'default': {\r\n                color: {\r\n                    width: '36px',\r\n                    height: '14px',\r\n                    borderRadius: '2px',\r\n                    background: `rgba(${this.props.box.color.rgb.r}, ${this.props.box.color.rgb.g}, ${this.props.box.color.rgb.b}, ${this.props.box.color.rgb.a})`,\r\n                },\r\n                swatch: {\r\n                    padding: '5px',\r\n                    background: '#fff',\r\n                    borderRadius: '1px',\r\n                    boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\r\n                    display: 'inline-block',\r\n                    cursor: 'pointer',\r\n                },\r\n                popover: {\r\n                    position: 'absolute',\r\n                    zIndex: '2',\r\n                },\r\n                cover: {\r\n                    position: 'fixed',\r\n                    top: '0px',\r\n                    right: '0px',\r\n                    bottom: '0px',\r\n                    left: '0px',\r\n                },\r\n            },\r\n        })\r\n\r\n        )\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <div style={this.styles().swatch} onClick={this.state.editable? this.handleColorClick : (event => {})}>\r\n                    <div style={this.styles().color}/>\r\n                </div>\r\n\r\n                {this.state.displayColorPicker ? <div style={this.styles().popover}>\r\n                    <div style={this.styles().cover} onClick={this.handleClose}/>\r\n                    <CirclePicker color={this.props.box.color} onChange={(color)=>{this.props.handleColorChange(this.props.i, color)}}/>\r\n                </div> : null}\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default ColorPicker;","import React, {Component} from 'react';\r\nimport Table from 'react-bootstrap/Table'\r\nimport ColorPicker from \"./colorPicker\";\r\n\r\nclass SummaryTable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            boxes: \"\",\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    renderRow(row, i){\r\n        return (\r\n            <tr>\r\n                <th>\r\n                    {row.name}\r\n                </th>\r\n                <th>\r\n                    {row.allocated}\r\n                </th>\r\n                <th>\r\n                    {row.requested}\r\n                </th>\r\n                <th>\r\n                    <ColorPicker box={row} i={i} editable={false}/>\r\n                </th>\r\n            </tr>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        let rows = [];\r\n        if(this.props.summary !== null){\r\n            for(let i=0; i<this.props.summary.length; i++){\r\n                rows.push(this.renderRow(this.props.summary[i], i))\r\n            }\r\n        }\r\n\r\n\r\n        return (\r\n            <Table bordered>\r\n                <thead>\r\n                <tr>\r\n                    <th>\r\n                        ID\r\n                    </th>\r\n                    <th>\r\n                        Number allocated\r\n                    </th>\r\n                    <th>\r\n                        Number Requested\r\n                    </th>\r\n                    <th>\r\n                        Color\r\n                    </th>\r\n\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {rows}\r\n                </tbody>\r\n            </Table>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SummaryTable;","import React, {Component} from 'react';\r\nimport Axios from 'axios';\r\n\r\nimport NavbarComponent from \"../components/navbarComponent\";\r\nimport SolutionForm from \"../components/SolutionForm\";\r\nimport Scene from \"../components/scene\";\r\nimport VisualizationForm from \"../components/visualizationForm\";\r\nimport SummaryTable from \"../components/summaryTable\";\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.scene = React.createRef()\r\n        this.state = {\r\n            containerVisible: false,\r\n            solution: null,\r\n            boxes: null,\r\n            summary: null,\r\n            iteration: 0,\r\n            maxIteration: 0\r\n        }\r\n\r\n        this.handleSuccessfulAuth = this.handleSuccessfulAuth.bind(this);\r\n        this.handleSolutionChange = this.handleSolutionChange.bind(this);\r\n        this.handleContainerVisible = this.handleContainerVisible.bind(this);\r\n        this.handleIterarion = this.handleIterarion.bind(this);\r\n    }\r\n\r\n    handleSuccessfulAuth(data){\r\n        this.props.handleLogin(data);\r\n        this.props.history.push(\"/\");\r\n    }\r\n\r\n    handleSolutionChange(solution) {\r\n        this.setState({\r\n            solution: solution\r\n        })\r\n        this.props.solutionService.getSolutionBoxes(solution.id).then(Axios.spread((...responses) => {\r\n            this.setState({\r\n                boxes: responses[0].data,\r\n                container: responses[1].data,\r\n                summary: responses[2].data,\r\n                maxIterations: responses[3].data[0],\r\n                iteration: responses[3].data[0]\r\n            })\r\n            this.scene.current.refresh(this.state.containerVisible, this.state.iteration);\r\n        }))\r\n    }\r\n\r\n    handleIterarion(event){\r\n        this.setState({\r\n            iteration: parseInt(event.target.value)\r\n        })\r\n        this.scene.current.refresh(this.state.containerVisible, event.target.value);\r\n    }\r\n\r\n    handleContainerVisible(visible){\r\n        this.setState({\r\n            containerVisible: visible\r\n        })\r\n\r\n        this.scene.current.refresh(visible, this.state.iteration);\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <NavbarComponent pushLogin={this.props.pushLogin}/>\r\n                </div>\r\n                <div className={\"row\"}\r\n                     style={{height: '100%', width:'100%'}}\r\n                >\r\n                    <div className={\"col-md-8\"} >\r\n                        <SolutionForm solutionService={this.props.solutionService} handleSolutionChange={this.handleSolutionChange}/>\r\n                        <Scene ref={this.scene} boxes={this.state.boxes} container={this.state.container}/>\r\n                    </div>\r\n                    <div className={\"col-md-4\"}>\r\n                        <br/>\r\n                        <br/>\r\n                        <h2>Visualization Options</h2>\r\n                        <VisualizationForm containerVisible={this.handleContainerVisible} handleIteration={this.handleIterarion} maxIterations={this.state.maxIterations}/>\r\n                        <h2> Solution Summary</h2>\r\n                        <SummaryTable solutionService={this.props.solutionService} summary={this.state.summary}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import Axios from \"axios\";\r\n\r\nclass AuthService{\r\n\r\n    getTokenHeaders(localStorage){\r\n        const token = JSON.parse(localStorage.getItem('login'));\r\n        return {\r\n            headers:{\r\n                'Authorization': 'Bearer ' + 'token.access_token'\r\n            }\r\n        }\r\n    }\r\n\r\n    is_logged(localStorage){\r\n        return true;\r\n    }\r\n\r\n    login(username, password, history){\r\n        var qs = require('qs');\r\n\r\n        const requestBody = {\r\n            \"username\": username,\r\n            \"password\": password\r\n        };\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            }\r\n        };\r\n\r\n        return Axios.post(`${process.env[\"REACT_APP_BASE_URL\"]}/token`,\r\n            qs.stringify(requestBody), config\r\n        )\r\n    }\r\n\r\n    register(state, username, password, history){\r\n        console.log(`http://localhost:8080/users`);\r\n        debugger;\r\n        Axios.post(`http://localhost:8080/users`,\r\n           {\r\n                username: state.username,\r\n                email: state.email,\r\n                full_name: state.full_name,\r\n                password: state.password\r\n            }\r\n        ).then(response => {\r\n            this.login(username, password, history)\r\n        }).catch(err=>{\r\n            console.warn(err);\r\n        })\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default AuthService;","import Axios from \"axios\";\r\n\r\nclass SolutionsService {\r\n    constructor() {\r\n        let url = \"http://localhost:8080\"\r\n        this.url = `${url}/solution`\r\n        this.urlBoxes = `${url}/allocatedBox`\r\n        this.urlContainer = `${url}/Container`\r\n        this.url_user = `${url}/users/me`\r\n    }\r\n\r\n    optimize(boxes, container, history) {\r\n        boxes.forEach(box => {\r\n            box.color = box.color.hex\r\n        })\r\n        delete container.color\r\n        let config = {\r\n            headers: {\r\n                'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJjYXJsb3Nkb25hZG8iLCJleHAiOjE2MDcyNzY3MDJ9.Q9EgKOYwZWq6pVBw3OCD8fh2G-USgsss28lp7UafUIc'\r\n            }\r\n        }\r\n\r\n        Axios.get(this.url_user, config).then(response => {\r\n            let user_id = response.data.id\r\n            Axios.post(this.url,\r\n                {\r\n                    \"boxes\": boxes,\r\n                    \"container\": container,\r\n                    \"user_id\": user_id\r\n                },\r\n                config).then(response => {\r\n                history.push('/')\r\n                console.log(response.data)\r\n            }).catch(err => {\r\n                console.warn('Error:' + err);\r\n            })\r\n        }).catch(error => {\r\n            console.warn(error);\r\n        })\r\n\r\n    }\r\n\r\n    getUserId() {\r\n        let config = {\r\n            headers: {\r\n                'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJjYXJsb3Nkb25hZG8iLCJleHAiOjE2MDcyNzY3MDJ9.Q9EgKOYwZWq6pVBw3OCD8fh2G-USgsss28lp7UafUIc'\r\n                    // + JSON.parse(localStorage.getItem('login')).access_token\r\n            }\r\n        }\r\n        return Axios.get(this.url_user, config)\r\n    }\r\n\r\n    getSolutions(user_id) {\r\n        let config = {\r\n            headers: {\r\n                'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJjYXJsb3Nkb25hZG8iLCJleHAiOjE2MDcyNzY3MDJ9.Q9EgKOYwZWq6pVBw3OCD8fh2G-USgsss28lp7UafUIc'\r\n            }\r\n        }\r\n        return (Axios.get(`${this.url}/${user_id}`, config))\r\n    }\r\n\r\n    getSolutionBoxes(solutionId) {\r\n        let config = {\r\n            headers: {\r\n                // 'Authorization': 'Bearer ' + JSON.parse(localStorage.getItem('login')).access_token\r\n                'Authorization': 'Bearer ' +  \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJjYXJsb3Nkb25hZG8iLCJleHAiOjE2MDcyNzY3MDJ9.Q9EgKOYwZWq6pVBw3OCD8fh2G-USgsss28lp7UafUIc\"\r\n            }\r\n        }\r\n        return Axios.all(\r\n            [\r\n                Axios.get(`${this.urlBoxes}/${solutionId}`, config),\r\n                Axios.get(`${this.urlContainer}/${solutionId}`, config),\r\n                Axios.get(`${this.urlBoxes}/summary/${solutionId}`, config),\r\n                Axios.get(`${this.url}/maxIteration/${solutionId}`, config)\r\n            ]\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default SolutionsService;","import React, {Component} from 'react';\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\n// import Table from 'react-bootstrap/Table';\r\n\r\nclass AddForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: \"\",\r\n            x: \"\",\r\n            y: \"\",\r\n            z: \"\",\r\n            numBoxes: \"\",\r\n            color: {'rgb': {'r':0, 'g':0, 'b':0, 'a':0}}\r\n        }\r\n        this.addRow = this.addRow.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        if(this.props.type !== \"box\"){\r\n            this.setState({\r\n                id: \"container\",\r\n                numBoxes: 1\r\n            })\r\n        }\r\n    }\r\n\r\n    addRow(){\r\n\r\n        this.props.addItem(Object.assign(this.state,{}));\r\n        this.setState({\r\n            id: \"\",\r\n            x: \"\",\r\n            y: \"\",\r\n            z: \"\",\r\n            numBoxes: \"\"\r\n        })\r\n    }\r\n\r\n    handleChange(event){\r\n        let value = event.target.value;\r\n        if(value===null){\r\n            value=\"\";\r\n        }\r\n        if(['x', 'y', 'z', 'numBoxes'].includes(event.target.name)){\r\n            value = parseInt(value);\r\n        }\r\n        this.setState({\r\n            [event.target.name]: value\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n\r\n            <div>\r\n                <Form>\r\n                    <Form.Group>\r\n                        <Form.Label>Box Name</Form.Label>\r\n                        <Form.Control\r\n                            type={\"text\"}\r\n                            name=\"id\"\r\n                            placeholder=\"Enter box name\"\r\n                            value={this.props.type === 'box' ? this.state.id : \"Container\"}\r\n                            onChange={this.handleChange}\r\n                            disabled={this.props.type !== \"box\"}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Length (x)</Form.Label>\r\n                        <Form.Control\r\n                            type=\"number\"\r\n                            step='0.01'\r\n                            placeholder=\"Enter Box Length\"\r\n                            value={this.state.x}\r\n                            name=\"x\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Width (y)</Form.Label>\r\n                        <Form.Control\r\n                            type=\"number\"\r\n                            step='0.01'\r\n                            placeholder=\"Enter Box Width\"\r\n                            value={this.state.y}\r\n                            name=\"y\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Height (z)</Form.Label>\r\n                        <Form.Control\r\n                            type=\"number\"\r\n                            step='0.01'\r\n                            placeholder=\"Enter Box Height\"\r\n                            value={this.state.z}\r\n                            name=\"z\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Number of Boxes</Form.Label>\r\n                        <Form.Control\r\n                            type=\"number\"\r\n                            step='0.01'\r\n                            placeholder=\"Enter the Number of Boxes\"\r\n                            value={this.props.type === 'box' ? this.state.numBoxes : 1}\r\n                            name=\"numBoxes\"\r\n                            onChange={this.handleChange}\r\n                            disabled={this.props.type !==\"box\"}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Button variant=\"primary\" onClick={this.addRow}>Submit</Button>\r\n                    </Form.Group>\r\n\r\n                </Form>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddForm;","import React, {Component} from 'react';\r\n\r\nimport Table from 'react-bootstrap/Table'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from \"react-bootstrap/Button\";\r\nimport ColorPicker from \"./colorPicker\";\r\n\r\nclass RowTable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            displayColorPicker: false,\r\n        }\r\n        this.renderRows = this.renderRows.bind(this);\r\n    }\r\n\r\n    renderRows(row, i, picker) {\r\n        return (\r\n            <tr key={i}>\r\n                <th>\r\n                    {row.id}\r\n                </th>\r\n                <th>\r\n                    {row.x}\r\n                </th>\r\n                <th>\r\n                    {row.y}\r\n                </th>\r\n                <th>\r\n                    {row.z}\r\n                </th>\r\n                <th>\r\n                    {row.numBoxes}\r\n                </th>\r\n                <th>\r\n                    {this.props.type ===\"box\" ? <ColorPicker box={this.props.boxes[i]} i={i} handleColorChange={this.props.handleColorChange}/>: null}\r\n                </th>\r\n            </tr>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        let rows = [];\r\n        for(let i=0; i<this.props.boxes.length; i++){\r\n            rows.push(this.renderRows(this.props.boxes[i], i))\r\n        }\r\n\r\n        let container =[];\r\n        if(this.props.container !== undefined) {\r\n            if (this.props.container.x !== \"\") {\r\n                container.push(this.renderRows(this.props.container, this.props.boxes.length))\r\n            }\r\n        }\r\n\r\n\r\n\r\n        return (\r\n\r\n            <div>\r\n                <Table striped bordered hover size=\"md\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>Length (x)</th>\r\n                        <th>Width (y)</th>\r\n                        <th>Height (z)</th>\r\n                        <th>Number of Boxes</th>\r\n                        <th>Color</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {rows}\r\n                    </tbody>\r\n                    <tfoot>\r\n                    {container}\r\n                    </tfoot>\r\n                </Table>\r\n                <Form>\r\n                    <Button onClick={this.props.submit}> Submit</Button>\r\n                </Form>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RowTable;","import React, {Component} from 'react';\r\nimport Col from 'react-bootstrap/Col'\r\n\r\nimport NavbarComponent from \"../components/navbarComponent\";\r\nimport AddForm from \"../components/addForm\";\r\nimport RowTable from \"../components/rowTable\";\r\nimport './boxes.css'\r\n\r\nclass Boxes extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            boxes: []\r\n        }\r\n        this.addBox = this.addBox.bind(this);\r\n        this.submit = this.submit.bind(this);\r\n        this.handleColorChange = this.handleColorChange.bind(this);\r\n    }\r\n\r\n    addBox(box){\r\n        let boxes = Object.assign(this.state.boxes, {});\r\n        boxes.push(box);\r\n        this.setState({\r\n            boxes: boxes\r\n        })\r\n    }\r\n\r\n    handleColorChange(i, color){\r\n        let boxes = Object.assign(this.state.boxes, []);\r\n        boxes[i].color = color\r\n        this.setState({\r\n            boxes: boxes\r\n        })\r\n    }\r\n\r\n    submit(){\r\n        localStorage.setItem('boxes', JSON.stringify(this.state.boxes));\r\n        this.props.history.push('/container');\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <NavbarComponent pushLogin={this.props.pushLogin}/>\r\n                </div>\r\n                <br/>\r\n                <div className=\"row\">\r\n                    <Col md={{span: 4, offset: 1}}>\r\n                        <h2>Add Boxes</h2>\r\n                        <AddForm addItem={this.addBox} type={\"box\"} />\r\n                    </Col>\r\n                    <Col md={{span: 5, offset: 1}}>\r\n                        <h2>Current Schema</h2>\r\n                        <RowTable boxes={this.state.boxes} submit={this.submit} handleColorChange={this.handleColorChange} type={\"box\"}/>\r\n                    </Col>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Boxes;","import React, {Component} from 'react';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nimport AddForm from \"../components/addForm\";\r\nimport RowTable from \"../components/rowTable\";\r\nimport NavbarComponent from \"../components/navbarComponent\";\r\n\r\nclass Container extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            boxes: [{'id': 1, 'x': 1, 'y':1, 'z':1, 'numBoxes':1}],\r\n            addedContainer: false,\r\n            container: {\r\n                id: \"container\",\r\n                x: \"\",\r\n                y: \"\",\r\n                z: \"\",\r\n                numBoxes: \"\"\r\n            }\r\n        }\r\n\r\n        this.addItem = this.addItem.bind(this);\r\n        this.submit = this.submit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            boxes: JSON.parse(localStorage.getItem('boxes')),\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        localStorage.removeItem('boxes')\r\n    }\r\n\r\n    addItem(container){\r\n\r\n\r\n        this.setState({\r\n               container: container\r\n            }\r\n        )\r\n    }\r\n\r\n    submit(){\r\n        this.props.optimizerService.optimize(this.state.boxes, this.state.container, this.props.history);\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <NavbarComponent pushLogin={this.props.pushLogin}/>\r\n                <br/>\r\n                <div className={\"row\"}>\r\n\r\n                    <Col md={{span:4, offset: 1}}>\r\n                        <h2>Configure Container Dimensions</h2>\r\n                        <AddForm type={\"container\"} addItem={this.addItem}/>\r\n                    </Col>\r\n                    <Col md={{span:4, offset: 2}}>\r\n                        <h2>Current Schema</h2>\r\n                        <br/>\r\n                        <RowTable boxes={this.state.boxes} container={this.state.container}  submit={this.submit} type={\"container\"}/>\r\n                    </Col>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Container;","import React, {Component} from 'react';\r\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\r\n\r\nimport ProtectedRoute from \"./components/protectedRoute\";\r\nimport Authentication from \"./pages/authentication\";\r\nimport Home from \"./pages/Home\";\r\nimport './App.css';\r\nimport AuthService from \"./_services/authService\"\r\nimport SolutionsService from \"./_services/solutionsService\"\r\nimport Boxes from \"./pages/boxes\";\r\nimport Container from \"./pages/container\";\r\n\r\n\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state ={\r\n            loggedInStatus: false,\r\n            user: {},\r\n            authService: new AuthService(),\r\n            solutionService: new SolutionsService()\r\n        }\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n        this.pushLogin = this.pushLogin.bind(this);\r\n    }\r\n\r\n    handleLogin(data){\r\n        this.setState({\r\n            loggedInStatus: true,\r\n            user: data\r\n        })\r\n    }\r\n\r\n    pushLogin(){\r\n        this.props.history.push('/login')\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"App\">\r\n                <BrowserRouter>\r\n                    <Switch>\r\n                        <Route exact path={\"/login\"} render={props => (<Authentication {...props} handleLogin={this.handleLogin} authService={this.state.authService} type={'login'}/> )}/>\r\n                        <Route exact path={\"/register\"} render={props => (<Authentication {...props} handleLogin={this.handleLogin} authService={this.state.authService} type={'register'}/>)}/>\r\n                        <Route exact path={\"/boxes\"} render={props=> (<Boxes {...props} pushLogin={this.pushLogin} />)}/>\r\n                        <Route exact path={\"/container\"} render={props=> (<Container {...props} optimizerService={this.state.solutionService} pushLogin={this.pushLogin} />)}/>\r\n                        <Route\r\n                            exact\r\n                            path={\"/\"}\r\n                            component={() => <Home solutionService={this.state.solutionService} pushLogin={this.pushLogin} {...this.props}/>}\r\n                        />\r\n                        {/*<Route*/}\r\n                        {/*    exact*/}\r\n                        {/*    path={\"/boxes\"}*/}\r\n                        {/*    component={() => <Boxes {...this.props} pushLogin={this.pushLogin} />}*/}\r\n                        {/*/>*/}\r\n                        {/*<Route*/}\r\n                        {/*    exact*/}\r\n                        {/*    path={\"/container\"}*/}\r\n                        {/*    component={() => <Container {...this.props} optimizerService={this.state.solutionService} pushLogin={this.pushLogin} />}*/}\r\n                        {/*/>*/}\r\n                    </Switch>\r\n                </BrowserRouter>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}